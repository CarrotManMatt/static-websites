[dependency-groups]
dev = [
    { include-group = "lint-format" },
    { include-group = "pre-commit" },
    { include-group = "test" },
    { include-group = "type-check" },
]
lint-format = ["djlint>=1.35", "ruff>=0.4"]
pre-commit = ["pre-commit"]
test = []
type-check = ["django-stubs[compatible-mypy]>=5.1", "mypy>=1.12", "types-python-dateutil>=2.9"]

[project]
authors = [{ name = "Matt Norton", email = "matt@carrotmanmatt.com" }]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Private :: Do Not Upload",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet",
    "Typing :: Typed",
]
dependencies = [
    "django>=5.1",
    "gitpython>=3.1",
    "minify-html>=0.15",
    "python-dateutil>=2.9",
    "typed_classproperties",
]
description = "My own personal static websites. Available at https://carrotmanmatt.com & subdomains."
keywords = ["HTML5up", "carrot", "django-templates", "html", "static-site", "website"]
license = "Apache-2.0"
license-files = ["LICENSE"]
name = "static-websites"
requires-python = ">=3.12,<3.13" # TODO: Allow Python 3.13 once minify-html makes a new release with support for it
version = "1.0.0"

[project.urls]
Repository = "https://github.com/CarrotManMatt/static-websites"

[tool.djlint]
blank_line_after_tag = "load,extends,include"
ignore = "H021,D004"
include = "H017,H035"
profile = "django"
use_gitignore = true

[tool.mypy]
check_untyped_defs = true
disallow_any_decorated = true
disallow_any_explicit = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
extra_checks = true
no_implicit_reexport = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.ruff]
indent-width = 4
line-length = 95
output-format = "concise"

[tool.ruff.lint]
ignore = [
    "C90",
    "COM812",
    "COM819",
    "CPY",
    "D206",
    "D212",
    "DJ",
    "FA",
    "FAST",
    "INP001",
    "ISC001",
    "ISC002",
    "N806",
    "PD",
    "PIE808",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "S603",
    "SIM910",
    "TD002",
    "TD003",
    "W191",
]
select = ["ALL", "D204", "D213", "D401"]
task-tags = ["BUG", "DONE", "FIXME", "HACK", "IDEA", "ISSUE", "NOBUG", "NOTE", "REQ", "TODO"]

[tool.ruff.lint.flake8-type-checking]
quote-annotations = true
strict = true

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "typed_classproperties.cached_classproperty",
    "typed_classproperties.classproperty",
]
extend-ignore-names = [
    "BROKEN_*_MESSAGE",
    "DEFAULT_MESSAGE",
    "INVALID_*_MESSAGE",
    "NO_*_MESSAGE",
]

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true
max-doc-length = 95

[tool.ruff.lint.pydocstyle]
convention = "google"
property-decorators = [
    "typed_classproperties.cached_classproperty",
    "typed_classproperties.classproperty",
]

[tool.ruff.lint.pylint]
allow-magic-value-types = ["bytes", "int", "str"]
max-args = 7
max-branches = 19
max-returns = 10

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.uv]
default-groups = ["dev"]
no-binary-package = ["cssbeautifier", "jsbeautifier", "static-websites"]
no-build = true
no-build-package = ["minify-html"]
package = false
