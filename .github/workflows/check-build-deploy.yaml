name: Check, Build and Deploy All Websites

"on":
    pull_request:
        branches: [main]
    push:
        branches: [main]
    schedule:
        - cron: 48 5 * * 1
    workflow_dispatch: ~

jobs:
    uv-check:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Install uv
              uses: astral-sh/setup-uv@v6
              with:
                enable-cache: true

            - name: Check uv.lock (ensure all dependencies up to date)
              run: uv lock --check

    # yamllint disable-line rule:key-ordering
    mypy:
        env:
            UV_FROZEN: true
            UV_NO_SYNC: true
            UV_PYTHON_DOWNLOADS: never
        needs: [uv-check]
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Set Up Python
              uses: actions/setup-python@v5
              with:
                python-version-file: .python-version

            - name: Install uv
              uses: astral-sh/setup-uv@v6
              with:
                enable-cache: true

            - name: Install mypy From Locked Dependencies
              run: uv sync --no-group dev --group type-check

            - id: store-hashed-python-version
              name: Store Hashed Python Version
              run: echo "hashed_python_version=$(uv run -- python -VV | sha256sum | cut -d' ' -f1)"
                >> $GITHUB_OUTPUT

            - uses: actions/cache@v4
              with:
                key: mypy|${{steps.store-hashed-python-version.outputs.hashed_python_version}}
                path: ./.mypy_cache

            - name: Run mypy
              run: uv run -- mypy .  # TODO: Add GitHub workflows output format

    # yamllint disable-line rule:key-ordering
    pre-commit:
        env:
            UV_FROZEN: true
            UV_NO_SYNC: true
            UV_PYTHON_DOWNLOADS: never
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Add GB Locale
              run: |
                sudo apt-get update
                sudo apt-get install -y locales
                sudo locale-gen en_GB.UTF-8
              shell: bash

            - name: Set Up Python
              uses: actions/setup-python@v5
              with:
                python-version-file: .python-version

            - name: Install uv
              uses: astral-sh/setup-uv@v6
              with:
                enable-cache: true

            - name: Install pre-commit From Locked Dependencies
              run: uv sync --only-group pre-commit

            - id: store-hashed-python-version
              name: Store Hashed Python Version
              run: echo "hashed_python_version=$(uv run -- python -VV | sha256sum | cut -d' ' -f1)"
                >> $GITHUB_OUTPUT

            - uses: actions/cache@v4
              with:
                key: pre-commit|${{steps.store-hashed-python-version.outputs.hashed_python_version}}|${{hashFiles('.pre-commit-config.yaml')}}
                path: ~/.cache/pre-commit

            - name: Setup pre-commit Environments
              run: uv run -- pre-commit install-hooks

            - name: Save pre-commit Checks Which Require Skipping
              run: echo "SKIP=check-github-workflows,ruff,uv-lock" >> $GITHUB_ENV

            - name: Run pre-commit
              run: uv run -- pre-commit run --all-files --hook-stage manual  # TODO: Add GitHub workflows output format

            - if: ${{!cancelled()}}
              uses: pre-commit-ci/lite-action@v1.1.0

    # yamllint disable-line rule:key-ordering
    ruff-lint:
        env:
            UV_FROZEN: true
            UV_NO_SYNC: true
            UV_PYTHON_DOWNLOADS: never
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Set Up Python
              uses: actions/setup-python@v5
              with:
                python-version-file: .python-version

            - name: Install uv
              uses: astral-sh/setup-uv@v6
              with:
                enable-cache: true

            - name: Install ruff From Locked Dependencies
              run: uv sync --only-group lint-format

            - id: store-hashed-python-version
              name: Store Hashed Python Version
              run: echo "hashed_python_version=$(uv run -- python -VV | sha256sum | cut -d' ' -f1)"
                >> $GITHUB_OUTPUT

            - uses: actions/cache@v4
              with:
                key: ruff|${{steps.store-hashed-python-version.outputs.hashed_python_version}}
                path: ./.ruff_cache

            - name: Run Ruff
              run: uv run -- ruff check --no-fix --output-format=github

    # yamllint disable-line rule:key-ordering
    build-and-deploy:
        environment: deploy

        if: github.event_name == 'push' || github.event_name == 'schedule' || github.event_name ==
            'workflow_dispatch'

        name: Build and Deploy All Websites
        needs: [mypy, pre-commit, ruff-lint, uv-check]
        permissions:
            contents: read
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Set Up Python
              uses: actions/setup-python@v5
              with:
                python-version-file: .python-version

            - name: Install uv
              uses: astral-sh/setup-uv@v6
              with:
                enable-cache: true

            - name: Install Project
              run: uv sync --no-group dev

            - uses: twingate/github-action@v1
              with:
                service-key: ${{secrets.TWINGATE_SERVICE_KEY}}

            - uses: webfactory/ssh-agent@v0.9.1
              with:
                ssh-private-key: ${{secrets.SSH_PRIVATE_KEY}}

            - env:
                STATIC_WEBSITES_BUILDER_REMOTE_DIRECTORY: ${{secrets.REMOTE_DIRECTORY}}
                STATIC_WEBSITES_BUILDER_REMOTE_IP: ${{secrets.REMOTE_IP}}
                STATIC_WEBSITES_BUILDER_REMOTE_USERNAME: ${{secrets.REMOTE_USERNAME}}
              name: Run Build & Deploy Script
              run: uv run -m console
